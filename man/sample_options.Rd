% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_options.R
\name{sample_options}
\alias{sample_options}
\title{Sample from weighted options}
\usage{
sample_options(W, SEED)
}
\arguments{
\item{W}{A vector of weights.}

\item{SEED}{The seed to be used for the sampling.}
}
\value{
An integer corresponding to the chosen weight in the initially provided
vector. \strong{NOTE: indexing begins at 0 matching C++ convention}.
}
\description{
The R function to call the C++ \emph{cpp_sample_options} function.
}
\details{
A new seed must be passed each time the function is ran (for
different answers). The C++ function internally set a random seed with the
random C++ library (std::mt19937). Example code below provides a shorthand
call to retrieve consistent seeds based upon an initial use of
\emph{set.seed()}.
}
\examples{
set.seed(2021)
get_seed <- function() {
sample.int(.Machine$integer.max, 1)
}

sampleOut <- NULL
for(i in 1:10000){
  sampleOut[i] <- sample_options(c(0.25, 0.15, 0.5, 0.05, 0.05), get_seed())
}
hist(sampleOut)
table(sampleOut) / 10000

}
